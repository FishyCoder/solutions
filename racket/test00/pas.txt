
=======================
Question 0:
(define close
  (lambda (a b)
    (and (<= (- a b) 5) (<= (- b a) 5))))
=======================
Question 1:
(define volumeCone
  (lambda (r h)
  (* pi (* r r) (/ h 3))))
=======================
Question 2:
(define quadFormR1
  (lambda (a b c)
    (/ (+ (* -1 b)
          (sqrt (- (* b b)
                   (* 4 a c))))
       (* 2 a))))

(define quadFormR2
  (lambda (a b c)
    (/ (- (* -1 b)
          (sqrt (- (* b b)
                   (* 4 a c))))
       (* 2 a))))
=======================
Question 3:
(define quadraticEquationPlus
  (lambda (a b c)
    (/ (+ (- 0 b) (sqrt (- (expt b 2) (* 4 a c)))) (* 2 a))))

(define quadraticEquationMinus
  (lambda (a b c)
    (/ (- (- 0 b) (sqrt (- (expt b 2) (* 4 a c)))) (* 2 a))))
=======================
Question 4:
(define slope
  (lambda (x1 x2 y1 y2)
    (/ (- y2 y1) (- x2 x1))))
=======================
Question 5:
(define checkDivis
  (lambda (num1 num2)
    (= 0 (remainder num1 num2))))
=======================
Question 6:
(define coneVolume
  (lambda (b h) (* b h (/ 1 3))))
=======================
Question 7:

=======================
Question 8:

=======================
Question 9:

=======================
Question 10:
(define coneVolume
  (lambda (r h)
    (* (/ 1 3) (* r r) pi h)))
=======================
Question 11:

=======================
Question 12:
(define volumeCone
  (lambda (r h)
    (* pi (* r r) (/ h 3))))
=======================
Question 13:
(define between
  (lambda (x)
	(and)
	(and (> x 1) (< x 100))
	(and (> x 1000) (< x 10000))))
=======================
Question 14:
(define PolyIntAngle
  (lambda (n)
    (/ (* (- n 2) 180) n)))
=======================
Question 15:

=======================
Question 16:

=======================
Question 17:

=======================
Question 18:
(define gpa
  (lambda (g1 g2 g3 g4 g5)
    (/ (+ g1 g2 g3 g4 g5) 5)))
=======================
Question 19:
(define testPract00
  (lambda (a b c)
    (> (/ (+ a b) c) c)))

;true
(testPract00 6 8 2)

;false
(testPract00 2 3 4)
=======================
Question 20:
#|
Programming question:
Craete a function called Quadratic.
This function should allow the user to calulate the numeric value of x by inputing the values of a, b, and c.
Expect the user input to be real numbers.

Quadratic Formula (for reference)
x = ( -b ± √( b^2 - 4ac ) ) / ( 2a )
=======================
Question 21:
(define sideLength
  (lambda(area)
    (sqrt area)))
(sideLength 100)
=======================
Question 22:
Programming question:
Write a function that takes 5 grades and returns the average

Possible solution:

(define avg
  (lambda a b c d e)
  (/ (+ a b c d e) 5))
=======================
Question 23:
(define checkDivis
  (lambda (num1 num2)
    (= 0 (remainder num1 num2))))
(checkDivis 10 5)
(checkDivis 5 3)
=======================
Question 24:
(define testPRact00
  (lambda (a b c)
    (> (/ (+ a b ) c) c)))
=======================
Question 25:

=======================
Question 26:
(define PolygonIntAngle
  (lambda (n)
    (/ (* (- n 2) 180) n)))

(display "should be 135: ")
(PolygonIntAngle 8)
=======================
Question 27:
(define coneVol
  (lambda (b h)
    (* b h 1/3)))
=======================
Question 28:
(define volumeSphere
  (lambda (diameter)
    (* 4/3 pi (expt (/ diameter 2) 3))))
(volumeSphere 10)
=======================
Question 29:
(define areaC
  (lambda (radius)
    (* pi radius radius)))
(areaC 10)
=======================
Question 30:
(define velocity (lambda (distance time) (/ distance time)))

(velocity 10 5)
=======================
Question 31:
(define Circumferance
  (lambda (r)
    (* 2 r pi)))
=======================
Question 32:

=======================
Question 33:
(define volCone
  (lambda (r h)
    (* 1/3 pi h (expt r 2))))
=======================
Question 34:
(define VoltoSurf
  (lambda (volume)
    (* (expt (expt volume 1/3) 2) 6)))
=======================
Question 35:
(define SphSurfaceArea
  (lambda (radius)
    (* 4 pi (expt radius 2))))
(SphSurfaceArea 10)
=======================
Question 36:

=======================
Question 37:
;Acceptable Solutions

(define volCyl (lambda (d h)
                 (* h
                  (expt
                  (* pi (/ d 2)) 2))))

(volCyl 2 1)
=======================
Question 38:
(define Density
  (lambda (m V)
    (/ m V)))
(Density 24 6)
=======================
Question 39:
(define truthTable
  (lambda (a b)
    (and (or a b) (and a b))))
=======================
Question 40:
(define Area
  (lambda (r h)
  (+ (* (* 2 pi) (expt r 2)) (* 2 pi r h))))
(Area 5 6)
=======================
Question 41:
(define Circumference
  (lambda (r)
    (* 2 r pi)))
(Circumference 10)
=======================
Question 42:
(define quadraticFunction
  (lambda (a b c)
    (/ (- (* b -1) (sqrt (+ (expt b 2) (* -4 a c)))) (* a 2))))
(quadraticFunction 1 6 9)
=======================
Question 43:
(define SphSurfaceArea
  (lambda (radius)
    (* 4 pi (expt radius 2))))
(SphSurfaceArea 10)
=======================
Question 44:

=======================
Question 45:
(define AreaOfTraP
  (lambda h a b
  (* h(/ 2(+ a b)))))
=======================
Question 46:
(define VoltoSurf
  (lambda (volume)
    (* (expt (expt volume 1/3) 2) 6)))
=======================
Question 47:
ang racket
;MC QUESTION: What is "lambda" used for?
;OPTIONS:
;1. To create a function
;2. To compare functions
;3. To determine whether a function is true or false
;4. None of the above
;ANSWER: 1

;PROGRAMMING QUESTION: Create a function called "velocity"
;that finds the velocity of a moving object given the distance and time of the object.
;Use this formula: Velocity = Distance/Time
;POSSIBLE SOLUTION:
(define velocity
  (lambda (distance time)
    (/ distance time)))
=======================
Question 48:
(define volumeSphere
  (lambda (diameter)
    (* 4/3 pi (expt (/ diameter 2) 3))))
=======================
Question 49:

=======================
Question 50:

=======================
Question 51:

=======================
Question 52:
(define stockprice
  (lambda (n)
        (* 100
           (+
            (expt 1.35 (quotient n 2))
            (* (remainder n 2)(* 0.5 (expt 1.35 (quotient n 2))))
                  ))))
(stockprice 4)
=======================
Question 53:
#|
Programming question:
=======================
Question 54:
(define EqualTriArea
  (lambda (side)
    (/ (* side side
          (sqrt 3))
       4)))
(EqualTriArea 2)
=======================
Question 55:
(define Density
  (lambda (m V)
    (/ m V)))
(Density 24 6)
=======================
Question 56:
(define EqualTriArea (lambda (side) (/ (* side side (sqrt 3)) 4)))
(EqualTriArea 2)